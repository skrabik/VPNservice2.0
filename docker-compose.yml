services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    working_dir: /var/www
    ports: []
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    networks:
      - network
    depends_on:
      - postgres
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=vpnservice
      - DB_USERNAME=vpnservice_user
      - DB_PASSWORD=vpnservice_password
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL}
      - APP_KEY=${APP_KEY}

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: vpnservice
      POSTGRES_USER: vpnservice_user
      POSTGRES_PASSWORD: vpnservice_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/public
    depends_on:
      - app
    networks:
      - network

volumes:
  postgres_data:


networks:
  network:
    driver: bridge
